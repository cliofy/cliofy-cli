name: CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Run TypeScript type check
      run: pnpm run build
      
    - name: Run linting
      run: pnpm run lint
      
    - name: Check code formatting
      run: pnpm run format:check
      
    - name: Run unit tests
      run: pnpm run test:unit
      
    - name: Run integration tests
      run: pnpm run test:integration
      
    - name: Upload coverage to Codecov
      if: matrix.node-version == '20.x'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        fail_ci_if_error: false

  e2e-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'pnpm'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Build project
      run: pnpm run build
      
    - name: Start development server
      run: |
        cd ../..
        pnpm dev &
        sleep 30
        
    - name: Wait for server to be ready
      run: |
        timeout 60 bash -c 'until curl -f http://localhost:5173/api/health-check; do sleep 2; done'
        
    - name: Run E2E tests
      run: pnpm run test:e2e
      env:
        TEST_API_ENDPOINT: http://localhost:5173

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Setup Node.js  
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'pnpm'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Run security audit
      run: pnpm audit --audit-level moderate
      continue-on-error: true
      
    - name: Check for known vulnerabilities
      run: |
        pnpm dlx audit-ci --moderate
      continue-on-error: true

  build-matrix:
    runs-on: ${{ matrix.os }}
    needs: test
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'pnpm'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Build project
      run: pnpm run build
      
    - name: Test CLI execution
      run: node test-cli.js health
      continue-on-error: true